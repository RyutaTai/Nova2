//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   int material;                      // Offset:   64 Size:     4
//   bool hasTangent;                   // Offset:   68 Size:     4 [unused]
//   int skin;                          // Offset:   72 Size:     4 [unused]
//   int pad;                           // Offset:   76 Size:     4 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 cameraPosition;             // Offset:   80 Size:    16 [unused]
//
// }
//
// Resource bind info for materials
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 emissiveFactor;         // Offset:    0
//       int alphaMode;                 // Offset:   12
//       float alphaCutOff;             // Offset:   16
//       bool doubleSided;              // Offset:   20
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 baseColorFactor;    // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } baseColorTexture;        // Offset:   40
//           float metallicFactor;      // Offset:   48
//           float roughnessFactor;     // Offset:   52
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallicRoughnessTexture;// Offset:   56
//
//       } pbrMetallicRoughness;        // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normalTexture;               // Offset:   64
//       
//       struct OcclusionTextureInfo
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusionTexture;            // Offset:   76
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissiveTexture;             // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[2]                  sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// materialTextures[0]               texture  float4          2d             t1      1 
// materialTextures[3]               texture  float4          2d             t4      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float       
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float       
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[5], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v2.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 4
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wPosition.x; v1.y <- pin.wPosition.y; v1.z <- pin.wPosition.z; v1.w <- pin.wPosition.w; 
//   v2.x <- pin.wNormal.x; v2.y <- pin.wNormal.y; v2.z <- pin.wNormal.z; v2.w <- pin.wNormal.w; 
//   v3.x <- pin.wTangent.x; v3.y <- pin.wTangent.y; v3.z <- pin.wTangent.z; v3.w <- pin.wTangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 205 "E:\Program\XAudio\Nova_Fullscreen\Source\Game\Shaders\CityPS.hlsl"
mov r0.x, cb0[4].x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.x, r0.x, l(0), t0.xxxx  // r1.x <- materialConstant.emissiveFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.y, r0.x, l(4), t0.xxxx  // r1.y <- materialConstant.emissiveFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.z, r0.x, l(8), t0.xxxx  // r1.z <- materialConstant.emissiveFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.x, r0.x, l(24), t0.xxxx  // r2.x <- materialConstant.pbrMetallicRoughness.baseColorFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.y, r0.x, l(28), t0.xxxx  // r2.y <- materialConstant.pbrMetallicRoughness.baseColorFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.z, r0.x, l(32), t0.xxxx  // r2.z <- materialConstant.pbrMetallicRoughness.baseColorFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.w, r0.x, l(36), t0.xxxx  // r2.w <- materialConstant.pbrMetallicRoughness.baseColorFactor.w
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.y, r0.x, l(40), t0.xxxx  // r0.y <- materialConstant.pbrMetallicRoughness.baseColorTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(88), t0.xxxx  // r0.x <- materialConstant.emissiveTexture.index

#line 207
ilt r0.y, l(-1), r0.y
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v4.xyxx, t1.xyzw, s2
movc r2.xyzw, r0.yyyy, r3.xyzw, r2.xyzw  // r2.x <- baseColor.x; r2.y <- baseColor.y; r2.z <- baseColor.z; r2.w <- baseColor.w

#line 211
ilt r0.x, l(-1), r0.x
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v4.xyxx, t4.wxyz, s2
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx  // r0.x <- emissive.x; r0.y <- emissive.y; r0.z <- emissive.z

#line 215
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v2.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 216
mov r3.xyz, -cb1[4].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 218
itof r0.w, l(0)
dp3 r1.x, r1.xyzx, r3.xyzx
max r0.w, r0.w, r1.x
mul r1.xyz, r2.xyzx, r0.wwww
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 220
mov o0.xyz, r0.xyzx
mov o0.w, r2.w
ret 
// Approximately 31 instruction slots used
