//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 cameraPosition;             // Offset:   80 Size:    16
//   row_major float4x4 lightViewProjection;// Offset:   96 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// textureMaps[0]                    texture  float4          2d             t0      1 
// textureMaps[1]                    texture  float4          2d             t1      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// COLOR                    0   xyzw        5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 6
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.worldPosition.x; v1.y <- pin.worldPosition.y; v1.z <- pin.worldPosition.z; v1.w <- pin.worldPosition.w; 
//   v2.x <- pin.worldNormal.x; v2.y <- pin.worldNormal.y; v2.z <- pin.worldNormal.z; v2.w <- pin.worldNormal.w; 
//   v3.x <- pin.worldTangent.x; v3.y <- pin.worldTangent.y; v3.z <- pin.worldTangent.z; v3.w <- pin.worldTangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   v5.x <- pin.color.x; v5.y <- pin.color.y; v5.z <- pin.color.z; v5.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 16 "E:\Program\Nova2\Source\Game\Shaders\DronePS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s2  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 17
mov r0.w, r0.w  // r0.w <- alpha

#line 24
mov r1.x, l(0.454545)  // r1.x <- GAMMA

#line 25
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, r1.xxxx
exp r0.xyz, r0.xyzx  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z

#line 29
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v2.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 31
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v3.xyzx  // r2.x <- T.x; r2.y <- T.y; r2.z <- T.z

#line 33
mov r1.w, v3.w  // r1.w <- sigma

#line 34
dp3 r2.w, r1.xyzx, r2.xyzx
mul r3.xyz, r1.xyzx, r2.wwww
mov r3.xyz, -r3.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx  // r2.x <- T.x; r2.y <- T.y; r2.z <- T.z

#line 36
mul r3.xyz, r1.yzxy, r2.zxyz
mul r4.xyz, r1.zxyz, r2.yzxy
mov r4.xyz, -r4.xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- B.x; r3.y <- B.y; r3.z <- B.z

#line 38
sample_indexable(texture2d)(float,float,float,float) r4.xyz, v4.xyxx, t1.xyzw, s1
mov r4.xyz, r4.xyzx  // r4.x <- normal.x; r4.y <- normal.y; r4.z <- normal.z

#line 40
mul r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r5.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r4.xyz, r4.xyzx, r5.xyzx

#line 41
mul r2.xyz, r2.xyzx, r4.xxxx
mul r3.xyz, r3.xyzx, r4.yyyy
add r2.xyz, r2.xyzx, r3.xyzx
mul r1.xyz, r1.xyzx, r4.zzzz
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- N.x; r1.y <- N.y; r1.z <- N.z

#line 43
mov r2.xyz, -cb1[4].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx  // r2.x <- L.x; r2.y <- L.y; r2.z <- L.z

#line 44
itof r1.w, l(0)
dp3 r2.w, r1.xyzx, r2.xyzx
max r1.w, r1.w, r2.w
mul r0.xyz, r0.xyzx, r1.wwww  // r0.x <- diffuse.x; r0.y <- diffuse.y; r0.z <- diffuse.z

#line 45
mov r3.xyz, -v1.xyzx
add r3.xyz, r3.xyzx, cb1[5].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- v.x; r3.y <- v.y; r3.z <- v.z

#line 46
itof r1.w, l(0)
mul r2.xyz, r2.xyzx, r3.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
max r1.x, r1.x, r1.w
itof r1.y, l(128)
log r1.x, r1.x
mul r1.x, r1.x, r1.y
exp r1.xyz, r1.xxxx  // r1.x <- specular.x; r1.y <- specular.y; r1.z <- specular.z

#line 48
add r0.xyz, r0.xyzx, r1.xyzx  // r0.x <- finalColor.x; r0.y <- finalColor.y; r0.z <- finalColor.z

#line 51
mul r0.xyz, r0.xyzx, v5.xyzx

#line 77
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 70 instruction slots used
