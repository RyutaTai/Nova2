//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   int material;                      // Offset:   64 Size:     4
//   bool hasTangent;                   // Offset:   68 Size:     4
//   int skin;                          // Offset:   72 Size:     4 [unused]
//   int pad;                           // Offset:   76 Size:     4 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 cameraPosition;             // Offset:   80 Size:    16
//
// }
//
// Resource bind info for materials
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 emissiveFactor;         // Offset:    0
//       int alphaMode;                 // Offset:   12
//       float alphaCutOff;             // Offset:   16
//       bool doubleSided;              // Offset:   20
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 baseColorFactor;    // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } baseColorTexture;        // Offset:   40
//           float metallicFactor;      // Offset:   48
//           float roughnessFactor;     // Offset:   52
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallicRoughnessTexture;// Offset:   56
//
//       } pbrMetallicRoughness;        // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normalTexture;               // Offset:   64
//       
//       struct OcclusionTextureInfo
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusionTexture;            // Offset:   76
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissiveTexture;             // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// materialTextures[0]               texture  float4          2d             t1      1 
// materialTextures[1]               texture  float4          2d             t2      1 
// materialTextures[2]               texture  float4          2d             t3      1 
// materialTextures[3]               texture  float4          2d             t4      1 
// materialTextures[4]               texture  float4          2d             t5      1 
// diffuseIem                        texture  float4        cube            t33      1 
// specularPmrem                     texture  float4        cube            t34      1 
// lutGgx                            texture  float4          2d            t35      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t33
dcl_resource_texturecube (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 11
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.xyz, cb0[4].x, l(0), t0.xyzx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.xyzw, cb0[4].x, l(24), t0.xyzw
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.w, cb0[4].x, l(40), t0.xxxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.xyz, cb0[4].x, l(48), t0.xyzx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.w, cb0[4].x, l(64), t0.xxxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.xy, cb0[4].x, l(72), t0.xyxx
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.xy, cb0[4].x, l(84), t0.xyxx
ilt r0.w, l(-1), r0.w
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v4.xyxx, t1.xyzw, s2
  log r6.xyz, r5.xyzx
  mul r6.xyz, r6.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
  exp r5.xyz, r6.xyzx
  mul r1.xyzw, r1.xyzw, r5.xyzw
  mov o0.w, r1.w
else 
  mov o0.w, r1.w
endif 
ilt r0.w, l(-1), r4.y
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r4.yzw, v4.xyxx, t4.wxyz, s2
  log r4.yzw, r4.yyzw
  mul r4.yzw, r4.yyzw, l(0.000000, 2.200000, 2.200000, 2.200000)
  exp r4.yzw, r4.yyzw
  mul r0.xyz, r0.xyzx, r4.yzwy
endif 
ilt r0.w, l(-1), r2.z
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r4.yz, v4.xyxx, t2.xyzw, s1
  mul r2.xy, r2.xyxx, r4.zyzz
endif 
ilt r0.w, l(-1), r3.y
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r0.w, v4.xyxx, t5.yzwx, s1
else 
  mov r0.w, l(1.000000)
endif 
add r4.yzw, r1.xxyz, l(0.000000, -0.040000, -0.040000, -0.040000)
mad r4.yzw, r2.xxxx, r4.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)
mad r1.xyz, r2.xxxx, -r1.xyzx, r1.xyzx
add r5.xyz, -v1.xyzx, cb1[5].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r5.xyzx
dp3 r2.z, v2.xyzx, v2.xyzx
rsq r2.z, r2.z
mul r7.xyz, r2.zzzz, v2.xyzx
ilt r2.z, l(-1), r2.w
if_nz r2.z
  dp3 r2.z, v3.xyzx, v3.xyzx
  rsq r2.z, r2.z
  mul r8.xyz, r2.zzzz, v3.xyzx
  movc r8.xyz, cb0[4].yyyy, r8.xyzx, l(1.000000,0,0,0)
  movc r2.z, cb0[4].y, v3.w, l(1.000000)
  dp3 r2.w, r7.xyzx, r8.xyzx
  mad r8.xyz, -r7.xyzx, r2.wwww, r8.xyzx
  dp3 r2.w, r8.xyzx, r8.xyzx
  rsq r2.w, r2.w
  mul r8.xyz, r2.wwww, r8.xyzx
  mul r9.xyz, r7.zxyz, r8.yzxy
  mad r9.xyz, r7.yzxy, r8.zxyz, -r9.xyzx
  mul r9.xyz, r2.zzzz, r9.xyzx
  dp3 r2.z, r9.xyzx, r9.xyzx
  rsq r2.z, r2.z
  mul r9.xyz, r2.zzzz, r9.xyzx
  sample_indexable(texture2d)(float,float,float,float) r10.xyz, v4.xyxx, t3.xyzw, s1
  mad r10.xyz, r10.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mov r3.z, l(1.000000)
  mul r3.xyz, r3.xxzx, r10.xyzx
  dp3 r2.z, r3.xyzx, r3.xyzx
  rsq r2.z, r2.z
  mul r3.xyz, r2.zzzz, r3.xyzx
  mul r9.xyz, r9.xyzx, r3.yyyy
  mad r3.xyw, r3.xxxx, r8.xyxz, r9.xyxz
  mad r3.xyz, r3.zzzz, r7.xyzx, r3.xywx
  dp3 r2.z, r3.xyzx, r3.xyzx
  rsq r2.z, r2.z
  mul r7.xyz, r2.zzzz, r3.xyzx
endif 
dp3 r2.z, -cb1[4].xyzx, -cb1[4].xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, -cb1[4].xyzx
dp3 r2.z, r7.xyzx, r3.xyzx
dp3 r2.w, r7.xyzx, r6.xyzx
max r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r3.w, l(0.000000), r2.z
lt r5.w, l(0.000000), r2.w
or r3.w, r3.w, r5.w
if_nz r3.w
  mul r3.w, r2.y, r2.y
  mad r3.xyz, r5.xyzx, r1.wwww, r3.xyzx
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r3.xyzx
  dp3 r1.w, r7.xyzx, r3.xyzx
  max r1.w, r1.w, l(0.000000)
  dp3 r3.x, r3.xyzx, r6.xyzx
  max r3.x, r3.x, l(0.000000)
  add r5.xyz, -r4.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r3.x, -r3.x, l(1.000000)
  max r3.x, r3.x, l(0.000000)
  mul r3.y, r3.x, r3.x
  mul r3.y, r3.y, r3.y
  mul r3.x, r3.y, r3.x
  mad r3.xyz, r5.xyzx, r3.xxxx, r4.yzwy
  add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r5.xyz, r1.xyzx, r5.xyzx
  mul r5.xyz, r2.zzzz, r5.xyzx
  mul r5.xyz, r5.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000)
  mul r1.y, r3.w, r3.w
  mul r1.z, r2.z, r2.z
  mad r5.w, -r3.w, r3.w, l(1.000000)
  mad r1.z, r1.z, r5.w, r1.y
  sqrt r1.z, r1.z
  mul r1.z, r1.z, r2.w
  add r5.w, r1.z, r1.z
  lt r1.z, l(0.000000), r1.z
  div r5.w, l(0.500000), r5.w
  and r1.z, r1.z, r5.w
  mul r1.w, r1.w, r1.w
  mad r3.w, r3.w, r3.w, l(-1.000000)
  mad r1.w, r1.w, r3.w, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(3.141593)
  div r1.y, r1.y, r1.w
  mul r3.xyz, r1.zzzz, r3.xyzx
  mul r1.yzw, r1.yyyy, r3.xxyz
  mul r1.yzw, r1.yyzw, r2.zzzz
else 
  mov r5.xyz, l(0,0,0,0)
  mov r1.yzw, l(0,0,0,0)
endif 
min r2.x, r2.w, l(1.000000)
mov_sat r2.zw, r2.xxxy
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t35.zwxy, s1
sample_indexable(texturecube)(float,float,float,float) r3.xyz, r7.xyzx, t33.xyzw, s1
add r8.xy, -r2.yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
max r8.xzw, r4.yyzw, r8.xxxx
add r8.xzw, -r4.yyzw, r8.xxzw
mul r2.x, r8.y, r8.y
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r8.y
mad r8.xyz, r8.xzwx, r2.xxxx, r4.yzwy
mad r8.xyz, r8.xyzx, r2.zzzz, r2.wwww
add r2.x, r2.w, r2.z
add r2.x, -r2.x, l(1.000000)
add r9.xyz, -r4.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.yzw, r4.yyzw, r9.xxyz
mul r4.yzw, r4.yyzw, l(0.000000, 0.047619, 0.047619, 0.047619)
mul r9.xyz, r8.xyzx, r2.xxxx
mul r9.xyz, r4.yzwy, r9.xyzx
mad r2.xzw, -r4.yyzw, r2.xxxx, l(1.000000, 0.000000, 1.000000, 1.000000)
div r2.xzw, r9.xxyz, r2.xxzw
add r3.w, -r8.x, r2.x
add r3.w, r3.w, l(1.000000)
mad r2.xzw, r1.xxxx, r3.wwww, r2.xxzw
mad r2.xzw, r2.xxzw, r3.xxyz, r5.xxyz
dp3 r1.x, -r6.xyzx, r7.xyzx
add r1.x, r1.x, r1.x
mad r3.xyz, r7.xyzx, -r1.xxxx, -r6.xyzx
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r3.xyz, r1.xxxx, r3.xyzx
resinfo_indexable(texturecube)(float,float,float,float)_uint r1.x, l(0), t34.wxyz
iadd r1.x, r1.x, l(-1)
utof r1.x, r1.x
mul r1.x, r1.x, r2.y
sample_l_indexable(texturecube)(float,float,float,float) r3.xyz, r3.xyzx, t34.xyzw, s1, r1.x
mad r1.xyz, r3.xyzx, r8.xyzx, r1.yzwy
mad r3.xyz, r2.xzwx, r0.wwww, -r2.xzwx
mad r2.xyz, r4.xxxx, r3.xyzx, r2.xzwx
mad r3.xyz, r1.xyzx, r0.wwww, -r1.xyzx
mad r1.xyz, r4.xxxx, r3.xyzx, r1.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
add o0.xyz, r0.xyzx, r1.xyzx
ret 
// Approximately 176 instruction slots used
