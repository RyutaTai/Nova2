//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 cameraPosition;             // Offset:   80 Size:    16
//   row_major float4x4 lightViewProjection;// Offset:   96 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// comparisonSamplerState          sampler_c      NA          NA             s5      1 
// textureMaps[0]                    texture  float4          2d             t0      1 
// textureMaps[1]                    texture  float4          2d             t1      1 
// textureMaps[2]                    texture  float4          2d             t2      1 
// shadowMap                         texture  float4          2d             t8      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyzw        2     NONE   float       
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// COLOR                    0   xyzw        5     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[10], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s5, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyzw
dcl_output o0.xyzw
dcl_temps 7
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.worldPosition.x; v1.y <- pin.worldPosition.y; v1.z <- pin.worldPosition.z; v1.w <- pin.worldPosition.w; 
//   v2.x <- pin.worldNormal.x; v2.y <- pin.worldNormal.y; v2.z <- pin.worldNormal.z; v2.w <- pin.worldNormal.w; 
//   v3.x <- pin.worldTangent.x; v3.y <- pin.worldTangent.y; v3.z <- pin.worldTangent.z; v3.w <- pin.worldTangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   v5.x <- pin.color.x; v5.y <- pin.color.y; v5.z <- pin.color.z; v5.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 16 "E:\Program\XAudio\Nova_Fullscreen\Source\Nova\Shaders\ModelPs.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s2  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 17
mov r0.w, r0.w  // r0.w <- alpha

#line 24
mov r1.x, l(0.454545)  // r1.x <- GAMMA

#line 25
log r1.yzw, r0.xxyz
mul r1.xyz, r1.yzwy, r1.xxxx
exp r1.xyz, r1.xyzx  // r1.x <- color.x; r1.y <- color.y; r1.z <- color.z

#line 32
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v4.xyxx, t1.xyzw, s2
mov r2.xyz, r2.xyzx  // r2.x <- N.x; r2.y <- N.y; r2.z <- N.z

#line 34
dp3 r1.w, v3.xyzx, v3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v3.xyzx  // r3.x <- T.x; r3.y <- T.y; r3.z <- T.z

#line 36
mov r1.w, v3.w  // r1.w <- sigma

#line 37
dp3 r2.w, r2.xyzx, r3.xyzx
mul r4.xyz, r2.wwww, r2.xyzx
mov r4.xyz, -r4.xyzx
add r3.xyz, r3.xyzx, r4.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx  // r3.x <- T.x; r3.y <- T.y; r3.z <- T.z

#line 39
mul r4.xyz, r2.yzxy, r3.zxyz
mul r5.xyz, r2.zxyz, r3.yzxy
mov r5.xyz, -r5.xyzx
add r4.xyz, r4.xyzx, r5.xyzx
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx  // r4.x <- B.x; r4.y <- B.y; r4.z <- B.z

#line 41
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v4.xyxx, t1.xyzw, s1
mov r5.xyz, r5.xyzx  // r5.x <- normal.x; r5.y <- normal.y; r5.z <- normal.z

#line 43
mul r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
mov r6.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
add r5.xyz, r5.xyzx, r6.xyzx

#line 44
mul r3.xyz, r3.xyzx, r5.xxxx
mul r4.xyz, r4.xyzx, r5.yyyy
add r3.xyz, r3.xyzx, r4.xyzx
mul r2.xyz, r2.xyzx, r5.zzzz
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx

#line 46
mov r3.xyz, -cb1[4].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx  // r3.x <- L.x; r3.y <- L.y; r3.z <- L.z

#line 47
itof r1.w, l(0)
dp3 r2.w, r2.xyzx, r3.xyzx
max r1.w, r1.w, r2.w
mul r1.xyz, r1.wwww, r1.xyzx  // r1.x <- diffuse.x; r1.y <- diffuse.y; r1.z <- diffuse.z

#line 48
mov r4.xyz, -v1.xyzx
add r4.xyz, r4.xyzx, cb1[5].xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx  // r4.x <- v.x; r4.y <- v.y; r4.z <- v.z

#line 49
itof r1.w, l(0)
mul r4.xyz, r3.xyzx, r4.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r4.xyzx
dp3 r2.w, r2.xyzx, r4.xyzx
max r1.w, r1.w, r2.w
itof r2.w, l(128)
log r1.w, r1.w
mul r1.w, r1.w, r2.w
exp r4.xyz, r1.wwww  // r4.x <- specular.x; r4.y <- specular.y; r4.z <- specular.z

#line 61
dp3 r1.w, r2.xyzx, r3.xyzx
mov r1.w, -r1.w
add r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, l(0.010000)
max r1.w, r1.w, l(0.001000)  // r1.w <- shadowDepthBias

#line 64
mul r2.xyzw, v1.xxxx, cb1[6].xyzw
mul r3.xyzw, v1.yyyy, cb1[7].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v1.zzzz, cb1[8].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
mul r3.xyzw, v1.wwww, cb1[9].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw  // r2.x <- lightViewPosition.x; r2.y <- lightViewPosition.y; r2.z <- lightViewPosition.z; r2.w <- lightViewPosition.w

#line 65
div r2.xyz, r2.xyzx, r2.wwww

#line 68
mul r2.x, r2.x, l(0.500000)
add r3.x, r2.x, l(0.500000)  // r3.x <- lightViewTexcoord.x

#line 69
mul r2.x, r2.y, l(-0.500000)
add r3.y, r2.x, l(0.500000)  // r3.y <- lightViewTexcoord.y

#line 70
mov r1.w, -r1.w
add r1.w, r1.w, r2.z
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(1.000000)  // r1.w <- depth

#line 73
sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r3.xyxx, t8.xxxx, s5, r1.w
mov r2.xyz, r2.zzzz  // r2.x <- shadowFactor.x; r2.y <- shadowFactor.y; r2.z <- shadowFactor.z

#line 75
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v4.xyxx, t2.xyzw, s1
mov r3.xyz, r3.xyzx  // r3.x <- emissive.x; r3.y <- emissive.y; r3.z <- emissive.z

#line 76
mov r1.w, l(3.000000)  // r1.w <- intencity

#line 77
add r1.xyz, r1.xyzx, r4.xyzx
mul r3.xyz, r1.wwww, r3.xyzx
add r1.xyz, r1.xyzx, r3.xyzx  // r1.x <- fColor.x; r1.y <- fColor.y; r1.z <- fColor.z

#line 78
mul r0.xyz, r2.xyzx, r1.xyzx
mul o0.xyzw, r0.xyzw, v5.xyzw
ret 
// Approximately 96 instruction slots used
