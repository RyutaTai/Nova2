//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16 [unused]
//   float4 cameraPosition;             // Offset:   80 Size:    16 [unused]
//   row_major float4x4 invViewProjection;// Offset:   96 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// skybox                            texture  float4          2d             t5      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB5[10], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.texcoord.x; v1.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 37 "E:\Program\Nova2\Source\Nova\Shaders\SkymapPs.hlsl"
mul r0.x, v1.x, l(2.000000)
mov r0.y, l(-1.000000)
add r0.x, r0.y, r0.x  // r0.x <- ndc.x

#line 38
mul r0.y, v1.y, l(2.000000)
mov r0.y, -r0.y
add r0.y, r0.y, l(1.000000)  // r0.y <- ndc.y

#line 39
itof r0.z, l(1)  // r0.z <- ndc.z

#line 40
itof r0.w, l(1)  // r0.w <- ndc.w

#line 42
mul r1.xyzw, r0.xxxx, cb5[6].xyzw
mul r2.xyzw, r0.yyyy, cb5[7].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb5[8].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, cb5[9].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw  // r0.x <- R.x; r0.y <- R.y; r0.z <- R.z; r0.w <- R.w

#line 43
div r0.xyz, r0.xyzx, r0.wwww

#line 44
itof r0.w, l(0)  // r0.w <- roughness

#line 45
nop 
mov r0.xyz, r0.xyzx
mov r0.w, r0.w

#line 19
mov r1.x, l(3.141593)  // r1.x <- PI

#line 22
resinfo_indexable(texture2d)(float,float,float,float)_uint r1.y, l(0), t5.xwyz
mov r1.y, r1.y  // r1.y <- numberOfLevels

#line 24
mov r1.z, l(1)
ineg r1.z, r1.z
iadd r1.y, r1.z, r1.y
utof r1.y, r1.y
mul r0.w, r0.w, r1.y  // r0.w <- lod

#line 25
dp3 r1.y, r0.xyzx, r0.xyzx
rsq r1.y, r1.y
mul r0.xyz, r0.xyzx, r1.yyyy

#line 29
mov r1.y, -r0.z
max r1.y, r0.z, r1.y
mov r1.z, -r0.x
max r1.w, r0.x, r1.z
min r2.x, r1.w, r1.y
max r2.y, r1.w, r1.y
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
mul r2.x, r2.y, r2.x
mul r2.y, r2.x, r2.x
mul r2.z, r2.y, l(0.020835)
add r2.z, r2.z, l(-0.085133)
mul r2.z, r2.z, r2.y
add r2.z, r2.z, l(0.180141)
mul r2.z, r2.z, r2.y
add r2.z, r2.z, l(-0.330299)
mul r2.y, r2.z, r2.y
add r2.y, r2.y, l(0.999866)
mul r2.x, r2.y, r2.x
lt r1.y, r1.w, r1.y
mul r1.w, r2.x, l(-2.000000)
add r1.w, r1.w, l(1.570796)
and r1.y, r1.y, r1.w
add r1.y, r2.x, r1.y
lt r1.z, r0.x, r1.z
and r1.z, r1.z, l(0xc0490fdb)
add r1.y, r1.z, r1.y
min r1.z, r0.x, r0.z
max r0.x, r0.x, r0.z
mov r0.z, -r1.z
lt r0.z, r1.z, r0.z
mov r1.z, -r0.x
ge r0.x, r0.x, r1.z
and r0.x, r0.x, r0.z
mov r0.z, -r1.y
movc r0.x, r0.x, r0.z, r1.y
add r0.x, r1.x, r0.x
div r2.x, r0.x, l(6.283185)  // r2.x <- samplePoint.x

#line 30
mov r0.x, -r0.y
max r0.z, r0.x, r0.y
mov r1.y, -r0.z
add r1.y, r1.y, l(1.000000)
sqrt r1.y, r1.y
mul r1.z, r0.z, l(-0.018729)
add r1.z, r1.z, l(0.074261)
mul r1.z, r0.z, r1.z
add r1.z, r1.z, l(-0.212114)
mul r0.z, r0.z, r1.z
add r0.z, r0.z, l(1.570729)
mul r0.z, r1.y, r0.z
mul r1.y, r0.z, l(-2.000000)
add r1.y, r1.y, l(3.141593)
lt r0.x, r0.y, r0.x
and r0.x, r0.x, r1.y
add r0.x, r0.x, r0.z
mov r0.x, -r0.x
add r0.x, r0.x, l(1.570796)
add r0.x, r0.x, l(1.570796)
div r0.x, r0.x, r1.x
mov r0.x, -r0.x
add r2.y, r0.x, l(1.000000)  // r2.y <- samplePoint.y

#line 31
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, r2.xyxx, t5.xyzw, s1, r0.w  // r0.x <- <SampleSkybox return value>.x; r0.y <- <SampleSkybox return value>.y; r0.z <- <SampleSkybox return value>.z; r0.w <- <SampleSkybox return value>.w

#line 45
mov o0.xyzw, r0.xyzw
ret 
// Approximately 94 instruction slots used
