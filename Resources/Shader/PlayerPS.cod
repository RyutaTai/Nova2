//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   int material;                      // Offset:   64 Size:     4
//   bool hasTangent;                   // Offset:   68 Size:     4
//   int skin;                          // Offset:   72 Size:     4 [unused]
//   int pad;                           // Offset:   76 Size:     4 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 cameraPosition;             // Offset:   80 Size:    16
//
// }
//
// Resource bind info for materials
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 emissiveFactor;         // Offset:    0
//       int alphaMode;                 // Offset:   12
//       float alphaCutOff;             // Offset:   16
//       bool doubleSided;              // Offset:   20
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 baseColorFactor;    // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } baseColorTexture;        // Offset:   40
//           float metallicFactor;      // Offset:   48
//           float roughnessFactor;     // Offset:   52
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallicRoughnessTexture;// Offset:   56
//
//       } pbrMetallicRoughness;        // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normalTexture;               // Offset:   64
//       
//       struct OcclusionTextureInfo
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusionTexture;            // Offset:   76
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissiveTexture;             // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// material_textures[0]              texture  float4          2d             t1      1 
// material_textures[1]              texture  float4          2d             t2      1 
// material_textures[2]              texture  float4          2d             t3      1 
// material_textures[3]              texture  float4          2d             t4      1 
// material_textures[4]              texture  float4          2d             t5      1 
// diffuseIem                        texture  float4        cube            t33      1 
// specularPmrem                     texture  float4        cube            t34      1 
// lutGgx                            texture  float4          2d            t35      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
// SV_IsFrontFace           0   x           5    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t33
dcl_resource_texturecube (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps_sgv constant v5.x, is_front_face
dcl_output o0.xyzw
dcl_temps 15
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wPosition.x; v1.y <- pin.wPosition.y; v1.z <- pin.wPosition.z; v1.w <- pin.wPosition.w; 
//   v2.x <- pin.wNormal.x; v2.y <- pin.wNormal.y; v2.z <- pin.wNormal.z; v2.w <- pin.wNormal.w; 
//   v3.x <- pin.wTangent.x; v3.y <- pin.wTangent.y; v3.z <- pin.wTangent.z; v3.w <- pin.wTangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   v5.x <- is_front_face; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 76 "E:\Program\Nova2\Source\Game\Shaders\PlayerPS.hlsl"
mov r0.x, l(2.200000)  // r0.x <- GAMMA

#line 78
mov r0.y, cb0[4].x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(0), t0.xxxx  // r1.x <- m.emissiveFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.y, r0.y, l(4), t0.xxxx  // r1.y <- m.emissiveFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(8), t0.xxxx  // r1.z <- m.emissiveFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.x, r0.y, l(24), t0.xxxx  // r2.x <- m.pbrMetallicRoughness.baseColorFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.y, r0.y, l(28), t0.xxxx  // r2.y <- m.pbrMetallicRoughness.baseColorFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.z, r0.y, l(32), t0.xxxx  // r2.z <- m.pbrMetallicRoughness.baseColorFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.w, r0.y, l(36), t0.xxxx  // r2.w <- m.pbrMetallicRoughness.baseColorFactor.w
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(40), t0.xxxx  // r0.z <- m.pbrMetallicRoughness.baseColorTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(48), t0.xxxx  // r0.w <- m.pbrMetallicRoughness.metallicFactor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.y, r0.y, l(52), t0.xxxx  // r3.y <- m.pbrMetallicRoughness.roughnessFactor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.w, r0.y, l(56), t0.xxxx  // r1.w <- m.pbrMetallicRoughness.metallicRoughnessTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.z, r0.y, l(64), t0.xxxx  // r3.z <- m.normalTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.y, r0.y, l(72), t0.xxxx  // r4.y <- m.normalTexture.scale
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.w, r0.y, l(76), t0.xxxx  // r3.w <- m.occlusionTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.x, r0.y, l(84), t0.xxxx  // r4.x <- m.occlusionTexture.strength
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(88), t0.xxxx  // r0.y <- m.emissiveTexture.index

#line 80
mov r2.xyzw, r2.xyzw  // r2.x <- basecolor_factor.x; r2.y <- basecolor_factor.y; r2.z <- basecolor_factor.z; r2.w <- basecolor_factor.w

#line 81
mov r0.z, r0.z  // r0.z <- basecolor_texture

#line 82
ilt r0.z, l(-1), r0.z
if_nz r0.z

#line 84
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v4.xyxx, t1.xyzw, s2  // r5.x <- sampled.x; r5.y <- sampled.y; r5.z <- sampled.z; r5.w <- sampled.w

#line 85
  log r6.xyz, r5.xyzx
  mul r6.xyz, r0.xxxx, r6.xyzx
  exp r5.xyz, r6.xyzx

#line 86
  mul r2.xyzw, r2.xyzw, r5.xyzw

#line 87
endif 

#line 89
mov r0.z, l(-0.250000)
add r0.z, r0.z, r2.w
lt r0.z, r0.z, l(0.000000)
and r0.z, r0.z, l(-1)
discard_nz r0.z

#line 92
mov r1.xyz, r1.xyzx  // r1.x <- emmisive_factor.x; r1.y <- emmisive_factor.y; r1.z <- emmisive_factor.z

#line 93
mov r0.y, r0.y  // r0.y <- emissive_texture

#line 94
ilt r0.y, l(-1), r0.y
if_nz r0.y

#line 96
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, v4.xyxx, t4.xyzw, s2
  mov r5.xyz, r5.xyzx  // r5.x <- sampled.x; r5.y <- sampled.y; r5.z <- sampled.z

#line 97
  log r5.xyz, r5.xyzx
  mul r0.xyz, r0.xxxx, r5.xyzx
  exp r0.xyz, r0.xyzx  // r0.x <- sampled.x; r0.y <- sampled.y; r0.z <- sampled.z

#line 98
  mul r1.xyz, r0.xyzx, r1.xyzx

#line 99
endif 

#line 101
mov r3.y, r3.y  // r3.y <- roughness_factor

#line 102
mov r0.w, r0.w  // r0.w <- metallic_factor

#line 103
mov r1.w, r1.w  // r1.w <- metallic_roughness_texture

#line 104
ilt r0.x, l(-1), r1.w
if_nz r0.x

#line 106
  sample_indexable(texture2d)(float,float,float,float) r0.xy, v4.xyxx, t2.yzxw, s1  // r0.x <- sampled.y; r0.y <- sampled.z

#line 107
  mul r3.y, r0.x, r3.y

#line 108
  mul r0.w, r0.y, r0.w

#line 109
endif 

#line 111
mov r0.x, l(1.000000)  // r0.x <- occlusion_factor

#line 112
mov r3.w, r3.w  // r3.w <- occlusion_texture

#line 113
ilt r0.y, l(-1), r3.w
if_nz r0.y

#line 115
  sample_indexable(texture2d)(float,float,float,float) r0.y, v4.xyxx, t5.yxzw, s1  // r0.y <- sampled.x

#line 116
  mul r0.x, r0.y, r0.x

#line 117
endif 

#line 118
mov r4.x, r4.x  // r4.x <- occlusion_strength

#line 120
mov r5.xyz, l(-0.040000,-0.040000,-0.040000,-0.000000)
add r5.xyz, r2.xyzx, r5.xyzx
mul r5.xyz, r0.wwww, r5.xyzx
add r5.xyz, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r5.x <- f0.x; r5.y <- f0.y; r5.z <- f0.z

#line 121
mov r6.xyz, l(1.000000,1.000000,1.000000,0)  // r6.x <- f90.x; r6.y <- f90.y; r6.z <- f90.z

#line 122
mul r0.y, r3.y, r3.y  // r0.y <- alpha_roughness

#line 123
mov r7.xyz, -r2.xyzx
add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r0.wwww, r7.xyzx
add r2.xyz, r2.xyzx, r7.xyzx  // r2.x <- c_diff.x; r2.y <- c_diff.y; r2.z <- c_diff.z

#line 126
mov r7.xyz, -v1.xyzx
add r7.xyz, r7.xyzx, cb1[5].xyzx
dp3 r0.z, r7.xyzx, r7.xyzx
rsq r0.z, r0.z
mul r7.xyz, r0.zzzz, r7.xyzx  // r7.x <- V.x; r7.y <- V.y; r7.z <- V.z

#line 128
dp3 r0.z, v2.xyzx, v2.xyzx
rsq r0.z, r0.z
mul r8.xyz, r0.zzzz, v2.xyzx  // r8.x <- N.x; r8.y <- N.y; r8.z <- N.z

#line 129
ine r0.z, l(0, 0, 0, 0), cb0[4].y
dp3 r0.w, v3.xyzx, v3.xyzx
rsq r0.w, r0.w
mul r9.xyz, r0.wwww, v3.xyzx
itof r10.xyz, l(1, 0, 0, 0)
movc r9.xyz, r0.zzzz, r9.xyzx, r10.xyzx  // r9.x <- T.x; r9.y <- T.y; r9.z <- T.z

#line 130
ine r0.z, l(0, 0, 0, 0), cb0[4].y
movc r0.z, r0.z, v3.w, l(1.000000)  // r0.z <- sigma

#line 131
dp3 r0.w, r8.xyzx, r9.xyzx
mul r10.xyz, r0.wwww, r8.xyzx
mov r10.xyz, -r10.xyzx
add r9.xyz, r9.xyzx, r10.xyzx
dp3 r0.w, r9.xyzx, r9.xyzx
rsq r0.w, r0.w
mul r9.xyz, r0.wwww, r9.xyzx  // r9.x <- T.x; r9.y <- T.y; r9.z <- T.z

#line 132
mul r10.xyz, r8.yzxy, r9.zxyz
mul r11.xyz, r8.zxyz, r9.yzxy
mov r11.xyz, -r11.xyzx
add r10.xyz, r10.xyzx, r11.xyzx
mul r10.xyz, r0.zzzz, r10.xyzx
dp3 r0.z, r10.xyzx, r10.xyzx
rsq r0.z, r0.z
mul r10.xyz, r0.zzzz, r10.xyzx  // r10.x <- B.x; r10.y <- B.y; r10.z <- B.z

#line 135
if_z v5.x

#line 137
  mov r9.xyz, -r9.xyzx

#line 138
  mov r10.xyz, -r10.xyzx

#line 139
  mov r8.xyz, -r8.xyzx

#line 140
endif 

#line 143
mov r3.z, r3.z  // r3.z <- normal_texture

#line 144
ilt r0.z, l(-1), r3.z
if_nz r0.z

#line 146
  sample_indexable(texture2d)(float,float,float,float) r11.xyz, v4.xyxx, t3.xyzw, s1  // r11.x <- sampled.x; r11.y <- sampled.y; r11.z <- sampled.z

#line 147
  mov r11.xyz, r11.xyzx  // r11.x <- normal_factor.x; r11.y <- normal_factor.y; r11.z <- normal_factor.z

#line 148
  mul r11.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mov r12.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- normal_factor.x; r11.y <- normal_factor.y; r11.z <- normal_factor.z

#line 149
  mov r4.z, l(1.000000)
  mul r4.yzw, r4.yyyz, r11.xxyz
  dp3 r0.z, r4.yzwy, r4.yzwy
  rsq r0.z, r0.z
  mul r4.yzw, r0.zzzz, r4.yyzw  // r4.y <- normal_factor.x; r4.z <- normal_factor.y; r4.w <- normal_factor.z

#line 150
  mul r9.xyz, r9.xyzx, r4.yyyy
  mul r10.xyz, r10.xyzx, r4.zzzz
  add r9.xyz, r9.xyzx, r10.xyzx
  mul r4.yzw, r8.xxyz, r4.wwww
  add r4.yzw, r4.yyzw, r9.xxyz
  dp3 r0.z, r4.yzwy, r4.yzwy
  rsq r0.z, r0.z
  mul r8.xyz, r0.zzzz, r4.yzwy

#line 151
endif 

#line 153
itof r4.yzw, l(0, 0, 0, 0)  // r4.y <- diffuse.x; r4.z <- diffuse.y; r4.w <- diffuse.z

#line 154
itof r9.xyz, l(0, 0, 0, 0)  // r9.x <- specular.x; r9.y <- specular.y; r9.z <- specular.z

#line 157
mov r10.xyz, -cb1[4].xyzx
dp3 r0.z, r10.xyzx, r10.xyzx
rsq r0.z, r0.z
mul r10.xyz, r0.zzzz, r10.xyzx  // r10.x <- L.x; r10.y <- L.y; r10.z <- L.z

#line 158
mov r11.xyz, l(1.000000,1.000000,1.000000,0)  // r11.x <- Li.x; r11.y <- Li.y; r11.z <- Li.z

#line 159
dp3 r0.z, r8.xyzx, r10.xyzx
max r0.z, r0.z, l(0.000000)  // r0.z <- NoL

#line 160
dp3 r0.w, r8.xyzx, r7.xyzx
max r0.w, r0.w, l(0.000000)  // r0.w <- NoV

#line 161
lt r1.w, l(0.000000), r0.z
lt r3.z, l(0.000000), r0.w
or r1.w, r1.w, r3.z
if_nz r1.w

#line 164
  add r10.xyz, r7.xyzx, r10.xyzx
  dp3 r1.w, r10.xyzx, r10.xyzx
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r10.xyzx  // r10.x <- H.x; r10.y <- H.y; r10.z <- H.z

#line 167
  dp3 r1.w, r8.xyzx, r10.xyzx
  max r1.w, r1.w, l(0.000000)  // r1.w <- NoH

#line 168
  dp3 r3.z, r10.xyzx, r7.xyzx
  max r3.z, r3.z, l(0.000000)  // r3.z <- HoV

#line 170
  mul r10.xyz, r0.zzzz, r11.xyzx
  nop 
  mov r12.xyz, r5.xyzx
  mov r13.xyz, r6.xyzx
  mov r2.xyz, r2.xyzx
  mov r3.z, r3.z

#line 34 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
  mov r3.w, l(3.141593)  // r3.w <- PI

#line 36
  nop 
  mov r12.xyz, r12.xyzx
  mov r13.xyz, r13.xyzx
  mov r3.z, r3.z

#line 8
  mov r14.xyz, -r12.xyzx
  add r13.xyz, r13.xyzx, r14.xyzx
  mov r5.w, -r3.z
  add r5.w, r5.w, l(1.000000)
  max r5.w, r5.w, l(0.000000)
  min r5.w, r5.w, l(1.000000)
  mov r6.w, l(1.000000)
  mul r6.w, r5.w, r6.w
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r6.w
  mul r13.xyz, r5.wwww, r13.xyzx
  add r12.xyz, r12.xyzx, r13.xyzx  // r12.x <- <FSchlick return value>.x; r12.y <- <FSchlick return value>.y; r12.z <- <FSchlick return value>.z

#line 36
  mov r12.xyz, -r12.xyzx
  add r12.xyz, r12.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r13.xyz, r2.xyzx, r3.wwww
  mul r12.xyz, r12.xyzx, r13.xyzx  // r12.x <- <BrdfLambertian return value>.x; r12.y <- <BrdfLambertian return value>.y; r12.z <- <BrdfLambertian return value>.z

#line 170 "E:\Program\Nova2\Source\Game\Shaders\PlayerPS.hlsl"
  mul r10.xyz, r10.xyzx, r12.xyzx
  add r4.yzw, r4.yyzw, r10.xxyz

#line 171
  mul r10.xyz, r0.zzzz, r11.xyzx
  nop 
  mov r11.xyz, r5.xyzx
  mov r6.xyz, r6.xyzx
  mov r0.y, r0.y
  mov r3.z, r3.z
  mov r0.z, r0.z
  mov r0.w, r0.w
  mov r1.w, r1.w

#line 41 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
  nop 
  mov r11.xyz, r11.xyzx
  mov r6.xyz, r6.xyzx
  mov r3.z, r3.z

#line 8
  mov r12.xyz, -r11.xyzx
  add r6.xyz, r6.xyzx, r12.xyzx
  mov r2.y, -r3.z
  add r2.y, r2.y, l(1.000000)
  max r2.y, r2.y, l(0.000000)
  min r2.y, r2.y, l(1.000000)
  mov r2.z, l(1.000000)
  mul r2.z, r2.y, r2.z
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, r2.z
  mul r6.xyz, r2.yyyy, r6.xyzx
  add r6.xyz, r6.xyzx, r11.xyzx  // r6.x <- <FSchlick return value>.x; r6.y <- <FSchlick return value>.y; r6.z <- <FSchlick return value>.z

#line 41
  mov r6.xyz, r6.xyzx  // r6.x <- F.x; r6.y <- F.y; r6.z <- F.z

#line 42
  nop 
  mov r0.z, r0.z
  mov r0.w, r0.w
  mov r0.y, r0.y

#line 13
  mul r2.y, r0.y, r0.y  // r2.y <- alphaRoughnessSq

#line 16
  mul r0.z, r0.z, r0.z
  mov r2.z, -r2.y
  add r2.z, r2.z, l(1.000000)
  mul r0.z, r0.z, r2.z
  add r0.z, r2.y, r0.z
  sqrt r0.z, r0.z
  mul r0.z, r0.z, r0.w  // r0.z <- ggxl

#line 18
  add r0.z, r0.z, r0.z  // r0.z <- ggx

#line 20
  lt r0.w, l(0.000000), r0.z
  div r0.z, l(0.500000), r0.z
  movc r0.z, r0.w, r0.z, l(0)  // r0.z <- <VGgx return value>

#line 42
  mov r0.z, r0.z  // r0.z <- Vis

#line 43
  nop 
  mov r1.w, r1.w
  mov r0.y, r0.y

#line 25
  mov r0.w, l(3.141593)  // r0.w <- PI

#line 26
  mul r0.y, r0.y, r0.y  // r0.y <- alphaRoughnessSq

#line 27
  mul r1.w, r1.w, r1.w
  mov r2.y, l(-1.000000)
  add r2.y, r0.y, r2.y
  mul r1.w, r1.w, r2.y
  add r1.w, r1.w, l(1.000000)  // r1.w <- f

#line 29
  mul r0.w, r0.w, r1.w
  mul r0.w, r1.w, r0.w
  div r0.y, r0.y, r0.w  // r0.y <- <DGgx return value>

#line 43
  mov r0.y, r0.y  // r0.y <- D

#line 45
  mul r6.xyz, r0.zzzz, r6.xyzx
  mul r0.yzw, r0.yyyy, r6.xxyz  // r0.y <- <BrdfSpecularGgx return value>.x; r0.z <- <BrdfSpecularGgx return value>.y; r0.w <- <BrdfSpecularGgx return value>.z

#line 171 "E:\Program\Nova2\Source\Game\Shaders\PlayerPS.hlsl"
  mul r0.yzw, r0.yyzw, r10.xxyz
  add r9.xyz, r0.yzwy, r9.xyzx

#line 172
endif 

#line 175
nop 
mov r8.xyz, r8.xyzx
mov r7.xyz, r7.xyzx
mov r3.y, r3.y
mov r2.x, r2.x
mov r5.xyz, r5.xyzx

#line 50 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r0.y, r8.xyzx, r7.xyzx
max r0.y, r0.y, l(0.000000)
min r3.x, r0.y, l(1.000000)  // r3.x <- NoV

#line 52
max r0.yz, r3.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.yz, r0.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)  // r0.y <- brdfSamplePoint.x; r0.z <- brdfSamplePoint.y

#line 53
nop 
mov r0.yz, r0.yyzy

#line 22 "E:\Program\Nova2\Source\Nova\Shaders\ImageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r0.yz, r0.yzyy, t35.zxyw, s1
mov r0.yz, r0.yyzy  // r0.y <- <SampleLutGgx return value>.x; r0.z <- <SampleLutGgx return value>.y

#line 53 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
mov r0.yz, r0.yyzy  // r0.y <- fAb.x; r0.z <- fAb.y

#line 55
nop 
mov r8.xyz, r8.xyzx

#line 44 "E:\Program\Nova2\Source\Nova\Shaders\ImageBasedLighting.hlsli"
sample_indexable(texturecube)(float,float,float,float) r6.xyz, r8.xyzx, t33.xyzw, s1
mov r6.xyz, r6.xyzx  // r6.x <- <SampleDiffuseIem return value>.x; r6.y <- <SampleDiffuseIem return value>.y; r6.z <- <SampleDiffuseIem return value>.z

#line 55 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
mov r6.xyz, r6.xyzx  // r6.x <- irradiance.x; r6.y <- irradiance.y; r6.z <- irradiance.z

#line 57
mov r0.w, -r3.y
add r0.w, r0.w, l(1.000000)
max r10.xyz, r5.xyzx, r0.wwww
mov r11.xyz, -r5.xyzx
add r10.xyz, r10.xyzx, r11.xyzx  // r10.x <- fr.x; r10.y <- fr.y; r10.z <- fr.z

#line 58
mov r0.w, -r3.x
add r0.w, r0.w, l(1.000000)
mov r1.w, l(1.000000)
mul r1.w, r0.w, r1.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mul r10.xyz, r0.wwww, r10.xyzx
add r10.xyz, r5.xyzx, r10.xyzx  // r10.x <- kS.x; r10.y <- kS.y; r10.z <- kS.z

#line 59
mul r10.xyz, r0.yyyy, r10.xyzx
add r10.xyz, r0.zzzz, r10.xyzx  // r10.x <- fssEss.x; r10.y <- fssEss.y; r10.z <- fssEss.z

#line 61
add r0.y, r0.z, r0.y
mov r0.y, -r0.y
add r0.y, r0.y, l(1.000000)  // r0.y <- ems

#line 62
mov r11.xyz, -r5.xyzx
add r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r11.xyz, r5.xyzx, r11.xyzx
div r11.xyz, r11.xyzx, l(21.000000, 21.000000, 21.000000, 0.000000)  // r11.x <- fAvg.x; r11.y <- fAvg.y; r11.z <- fAvg.z

#line 63
mul r10.yzw, r10.xxyz, r0.yyyy
mul r10.yzw, r11.xxyz, r10.yyzw
mul r0.yzw, r0.yyyy, r11.xxyz
mov r0.yzw, -r0.yyzw
add r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
div r0.yzw, r10.yyzw, r0.yyzw  // r0.y <- fmsEms.x; r0.z <- fmsEms.y; r0.w <- fmsEms.z

#line 64
mov r1.w, -r10.x
add r1.w, r1.w, l(1.000000)
add r1.w, r0.y, r1.w
mul r1.w, r1.w, r2.x  // r1.w <- kD

#line 66
add r0.yzw, r0.yyzw, r1.wwww
mul r0.yzw, r6.xxyz, r0.yyzw  // r0.y <- <IblRadianceLambertian return value>.x; r0.z <- <IblRadianceLambertian return value>.y; r0.w <- <IblRadianceLambertian return value>.z

#line 175 "E:\Program\Nova2\Source\Game\Shaders\PlayerPS.hlsl"
add r0.yzw, r0.yyzw, r4.yyzw  // r0.y <- diffuse.x; r0.z <- diffuse.y; r0.w <- diffuse.z

#line 176
nop 
mov r8.xyz, r8.xyzx
mov r7.xyz, r7.xyzx
mov r3.y, r3.y
mov r5.xyz, r5.xyzx

#line 71 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r1.w, r8.xyzx, r7.xyzx
max r1.w, r1.w, l(0.000000)
min r3.x, r1.w, l(1.000000)  // r3.x <- NoV

#line 73
max r2.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r2.x <- brdfSamplePoint.x; r2.y <- brdfSamplePoint.y

#line 74
nop 
mov r2.xy, r2.xyxx

#line 22 "E:\Program\Nova2\Source\Nova\Shaders\ImageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t35.xyzw, s1
mov r2.xy, r2.xyxx  // r2.x <- <SampleLutGgx return value>.x; r2.y <- <SampleLutGgx return value>.y

#line 74 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
mov r2.xy, r2.xyxx  // r2.x <- fAb.x; r2.y <- fAb.y

#line 76
mov r4.yzw, -r7.xxyz
dp3 r1.w, r4.yzwy, r8.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r6.xyz, r1.wwww, r8.xyzx
add r4.yzw, r4.yyzw, r6.xxyz
dp3 r1.w, r4.yzwy, r4.yzwy
rsq r1.w, r1.w
mul r4.yzw, r1.wwww, r4.yyzw  // r4.y <- R.x; r4.z <- R.y; r4.w <- R.z

#line 77
nop 
mov r4.yzw, r4.yyzw
mov r3.y, r3.y

#line 50 "E:\Program\Nova2\Source\Nova\Shaders\ImageBasedLighting.hlsli"
resinfo_indexable(texturecube)(float,float,float,float)_uint r1.w, l(0), t34.xyzw
mov r1.w, r1.w  // r1.w <- numberOfLevels

#line 52
mov r2.z, l(1)
ineg r2.z, r2.z
iadd r1.w, r1.w, r2.z
utof r1.w, r1.w
mul r1.w, r1.w, r3.y  // r1.w <- lod

#line 54
sample_l_indexable(texturecube)(float,float,float,float) r4.yzw, r4.yzwy, t34.wxyz, s1, r1.w
mov r4.yzw, r4.yyzw  // r4.y <- <SampleSpecularPmrem return value>.x; r4.z <- <SampleSpecularPmrem return value>.y; r4.w <- <SampleSpecularPmrem return value>.z

#line 77 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
mov r4.yzw, r4.yyzw  // r4.y <- specularLight.x; r4.z <- specularLight.y; r4.w <- specularLight.z

#line 79
mov r1.w, -r3.y
add r1.w, r1.w, l(1.000000)
max r3.yzw, r5.xxyz, r1.wwww
mov r6.xyz, -r5.xyzx
add r3.yzw, r3.yyzw, r6.xxyz  // r3.y <- fr.x; r3.z <- fr.y; r3.w <- fr.z

#line 80
mov r1.w, -r3.x
add r1.w, r1.w, l(1.000000)
mov r2.z, l(1.000000)
mul r2.z, r1.w, r2.z
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.z
mul r3.xyz, r1.wwww, r3.yzwy
add r3.xyz, r3.xyzx, r5.xyzx  // r3.x <- kS.x; r3.y <- kS.y; r3.z <- kS.z

#line 81
mul r3.xyz, r2.xxxx, r3.xyzx
add r2.xyz, r2.yyyy, r3.xyzx  // r2.x <- fssEss.x; r2.y <- fssEss.y; r2.z <- fssEss.z

#line 83
mul r2.xyz, r2.xyzx, r4.yzwy  // r2.x <- <IblRadianceGgx return value>.x; r2.y <- <IblRadianceGgx return value>.y; r2.z <- <IblRadianceGgx return value>.z

#line 176 "E:\Program\Nova2\Source\Game\Shaders\PlayerPS.hlsl"
add r2.xyz, r2.xyzx, r9.xyzx  // r2.x <- specular.x; r2.y <- specular.y; r2.z <- specular.z

#line 178
mov r1.xyz, r1.xyzx  // r1.x <- emmisive.x; r1.y <- emmisive.y; r1.z <- emmisive.z

#line 179
mul r3.xyz, r0.xxxx, r0.yzwy
mov r4.yzw, -r0.yyzw
add r3.xyz, r3.xyzx, r4.yzwy
mul r3.xyz, r3.xyzx, r4.xxxx
add r0.yzw, r0.yyzw, r3.xxyz

#line 180
mul r3.xyz, r0.xxxx, r2.xyzx
mov r4.yzw, -r2.xxyz
add r3.xyz, r3.xyzx, r4.yzwy
mul r3.xyz, r3.xyzx, r4.xxxx
add r2.xyz, r2.xyzx, r3.xyzx

#line 182
add r0.xyz, r0.yzwy, r2.xyzx
add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- Lo.x; r0.y <- Lo.y; r0.z <- Lo.z

#line 183
mov o0.xyz, r0.xyzx
mov o0.w, r2.w
ret 
// Approximately 373 instruction slots used
