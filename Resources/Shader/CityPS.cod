//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer PRIMITIVE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 world;          // Offset:    0 Size:    64 [unused]
//   int material;                      // Offset:   64 Size:     4
//   bool hasTangent;                   // Offset:   68 Size:     4
//   int skin;                          // Offset:   72 Size:     4 [unused]
//   int pad;                           // Offset:   76 Size:     4 [unused]
//
// }
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 viewProjection; // Offset:    0 Size:    64 [unused]
//   float4 lightDirection;             // Offset:   64 Size:    16
//   float4 cameraPosition;             // Offset:   80 Size:    16
//
// }
//
// Resource bind info for materials
// {
//
//   struct MaterialConstants
//   {
//       
//       float3 emissiveFactor;         // Offset:    0
//       int alphaMode;                 // Offset:   12
//       float alphaCutOff;             // Offset:   16
//       bool doubleSided;              // Offset:   20
//       
//       struct PbrMetallicRoughness
//       {
//           
//           float4 baseColorFactor;    // Offset:   24
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   40
//               int texcoord;          // Offset:   44
//
//           } baseColorTexture;        // Offset:   40
//           float metallicFactor;      // Offset:   48
//           float roughnessFactor;     // Offset:   52
//           
//           struct TextureInfo
//           {
//               
//               int index;             // Offset:   56
//               int texcoord;          // Offset:   60
//
//           } metallicRoughnessTexture;// Offset:   56
//
//       } pbrMetallicRoughness;        // Offset:   24
//       
//       struct NormalTextureInfo
//       {
//           
//           int index;                 // Offset:   64
//           int texcoord;              // Offset:   68
//           float scale;               // Offset:   72
//
//       } normalTexture;               // Offset:   64
//       
//       struct OcclusionTextureInfo
//       {
//           
//           int index;                 // Offset:   76
//           int texcoord;              // Offset:   80
//           float strength;            // Offset:   84
//
//       } occlusionTexture;            // Offset:   76
//       
//       struct TextureInfo
//       {
//           
//           int index;                 // Offset:   88
//           int texcoord;              // Offset:   92
//
//       } emissiveTexture;             // Offset:   88
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[1]                  sampler      NA          NA             s1      1 
// samplerStates[2]                  sampler      NA          NA             s2      1 
// materials                         texture  struct         r/o             t0      1 
// materialTextures[0]               texture  float4          2d             t1      1 
// materialTextures[1]               texture  float4          2d             t2      1 
// materialTextures[2]               texture  float4          2d             t3      1 
// materialTextures[3]               texture  float4          2d             t4      1 
// materialTextures[4]               texture  float4          2d             t5      1 
// diffuseIem                        texture  float4        cube            t33      1 
// specularPmrem                     texture  float4        cube            t34      1 
// lutGgx                            texture  float4          2d            t35      1 
// PRIMITIVE_CONSTANT_BUFFER         cbuffer      NA          NA            cb0      1 
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float   xyz 
// NORMAL                   0   xyzw        2     NONE   float   xyz 
// TANGENT                  0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 0   xy          4     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[5], immediateIndexed
dcl_constantbuffer CB1[6], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_structured t0, 96
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t33
dcl_resource_texturecube (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t35
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 14
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.wPosition.x; v1.y <- pin.wPosition.y; v1.z <- pin.wPosition.z; v1.w <- pin.wPosition.w; 
//   v2.x <- pin.wNormal.x; v2.y <- pin.wNormal.y; v2.z <- pin.wNormal.z; v2.w <- pin.wNormal.w; 
//   v3.x <- pin.wTangent.x; v3.y <- pin.wTangent.y; v3.z <- pin.wTangent.z; v3.w <- pin.wTangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 101 "E:\Program\Nova2\Source\Game\Shaders\CityPS.hlsl"
mov r0.x, l(2.200000)  // r0.x <- GAMMA

#line 103
mov r0.y, cb0[4].x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.x, r0.y, l(0), t0.xxxx  // r1.x <- materialConstant.emissiveFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.y, r0.y, l(4), t0.xxxx  // r1.y <- materialConstant.emissiveFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.z, r0.y, l(8), t0.xxxx  // r1.z <- materialConstant.emissiveFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.x, r0.y, l(24), t0.xxxx  // r2.x <- materialConstant.pbrMetallicRoughness.baseColorFactor.x
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.y, r0.y, l(28), t0.xxxx  // r2.y <- materialConstant.pbrMetallicRoughness.baseColorFactor.y
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.z, r0.y, l(32), t0.xxxx  // r2.z <- materialConstant.pbrMetallicRoughness.baseColorFactor.z
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r2.w, r0.y, l(36), t0.xxxx  // r2.w <- materialConstant.pbrMetallicRoughness.baseColorFactor.w
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.z, r0.y, l(40), t0.xxxx  // r0.z <- materialConstant.pbrMetallicRoughness.baseColorTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.w, r0.y, l(48), t0.xxxx  // r0.w <- materialConstant.pbrMetallicRoughness.metallicFactor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r1.w, r0.y, l(52), t0.xxxx  // r1.w <- materialConstant.pbrMetallicRoughness.roughnessFactor
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.x, r0.y, l(56), t0.xxxx  // r3.x <- materialConstant.pbrMetallicRoughness.metallicRoughnessTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.y, r0.y, l(64), t0.xxxx  // r3.y <- materialConstant.normalTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r4.x, r0.y, l(72), t0.xxxx  // r4.x <- materialConstant.normalTexture.scale
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.z, r0.y, l(76), t0.xxxx  // r3.z <- materialConstant.occlusionTexture.index
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r3.w, r0.y, l(84), t0.xxxx  // r3.w <- materialConstant.occlusionTexture.strength
ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r0.y, r0.y, l(88), t0.xxxx  // r0.y <- materialConstant.emissiveTexture.index

#line 105
mov r2.xyzw, r2.xyzw  // r2.x <- baseColorFactor.x; r2.y <- baseColorFactor.y; r2.z <- baseColorFactor.z; r2.w <- baseColorFactor.w

#line 107
mov r0.z, r0.z  // r0.z <- baseColorTexture

#line 108
ilt r0.z, l(-1), r0.z
if_nz r0.z

#line 110
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v4.xyxx, t1.xyzw, s2  // r5.x <- sampled.x; r5.y <- sampled.y; r5.z <- sampled.z; r5.w <- sampled.w

#line 111
  log r6.xyz, r5.xyzx
  mul r6.xyz, r0.xxxx, r6.xyzx
  exp r5.xyz, r6.xyzx

#line 112
  mul r2.xyzw, r2.xyzw, r5.xyzw

#line 113
endif 

#line 120
mov r1.xyz, r1.xyzx  // r1.x <- emissiveFactor.x; r1.y <- emissiveFactor.y; r1.z <- emissiveFactor.z

#line 121
mov r0.y, r0.y  // r0.y <- emissiveTexture

#line 122
ilt r0.y, l(-1), r0.y
if_nz r0.y

#line 124
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, v4.xyxx, t4.xyzw, s2
  mov r5.xyz, r5.xyzx  // r5.x <- sampled.x; r5.y <- sampled.y; r5.z <- sampled.z

#line 125
  log r5.xyz, r5.xyzx
  mul r0.xyz, r0.xxxx, r5.xyzx
  exp r0.xyz, r0.xyzx  // r0.x <- sampled.x; r0.y <- sampled.y; r0.z <- sampled.z

#line 126
  mul r1.xyz, r0.xyzx, r1.xyzx

#line 127
endif 

#line 129
add r0.y, r1.w, l(0.500000)  // r0.y <- roughnessFactor

#line 130
mov r0.w, r0.w  // r0.w <- metallicFactor

#line 131
mov r3.x, r3.x  // r3.x <- metallicRoughnessTexture

#line 132
ilt r0.z, l(-1), r3.x
if_nz r0.z

#line 134
  sample_indexable(texture2d)(float,float,float,float) r4.yw, v4.xyxx, t2.xywz, s1  // r4.y <- sampled.y; r4.w <- sampled.z

#line 135
  mul r0.y, r0.y, r4.y

#line 136
  mul r0.w, r0.w, r4.w

#line 137
endif 

#line 139
mov r0.z, l(1.000000)  // r0.z <- occlusionFactor

#line 140
mov r3.z, r3.z  // r3.z <- occlusionTexture

#line 141
ilt r1.w, l(-1), r3.z
if_nz r1.w

#line 143
  sample_indexable(texture2d)(float,float,float,float) r1.w, v4.xyxx, t5.yzwx, s1  // r1.w <- sampled.x

#line 144
  mul r0.z, r0.z, r1.w

#line 145
endif 

#line 146
mov r3.w, r3.w  // r3.w <- occlusionStrength

#line 148
mov r5.xyz, l(-0.040000,-0.040000,-0.040000,-0.000000)
add r5.xyz, r2.xyzx, r5.xyzx
mul r5.xyz, r0.wwww, r5.xyzx
add r5.xyz, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)  // r5.x <- f0.x; r5.y <- f0.y; r5.z <- f0.z

#line 149
mov r6.xyz, l(1.000000,1.000000,1.000000,0)  // r6.x <- f90.x; r6.y <- f90.y; r6.z <- f90.z

#line 150
mul r1.w, r0.y, r0.y  // r1.w <- alphaRoughness

#line 151
mov r7.xyz, -r2.xyzx
add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r0.wwww, r7.xyzx
add r2.xyz, r2.xyzx, r7.xyzx  // r2.x <- cDiff.x; r2.y <- cDiff.y; r2.z <- cDiff.z

#line 154
mov r7.xyz, -v1.xyzx
add r7.xyz, r7.xyzx, cb1[5].xyzx
dp3 r0.w, r7.xyzx, r7.xyzx
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, r7.xyzx  // r7.x <- V.x; r7.y <- V.y; r7.z <- V.z

#line 156
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r8.xyz, r0.wwww, v2.xyzx  // r8.x <- N.x; r8.y <- N.y; r8.z <- N.z

#line 157
ine r0.w, l(0, 0, 0, 0), cb0[4].y
dp3 r3.x, v3.xyzx, v3.xyzx
rsq r3.x, r3.x
mul r9.xyz, r3.xxxx, v3.xyzx
itof r10.xyz, l(1, 0, 0, 0)
movc r9.xyz, r0.wwww, r9.xyzx, r10.xyzx  // r9.x <- T.x; r9.y <- T.y; r9.z <- T.z

#line 158
ine r0.w, l(0, 0, 0, 0), cb0[4].y
movc r0.w, r0.w, v3.w, l(1.000000)  // r0.w <- sigma

#line 159
dp3 r3.x, r8.xyzx, r9.xyzx
mul r10.xyz, r3.xxxx, r8.xyzx
mov r10.xyz, -r10.xyzx
add r9.xyz, r9.xyzx, r10.xyzx
dp3 r3.x, r9.xyzx, r9.xyzx
rsq r3.x, r3.x
mul r9.xyz, r3.xxxx, r9.xyzx  // r9.x <- T.x; r9.y <- T.y; r9.z <- T.z

#line 160
mul r10.xyz, r8.yzxy, r9.zxyz
mul r11.xyz, r8.zxyz, r9.yzxy
mov r11.xyz, -r11.xyzx
add r10.xyz, r10.xyzx, r11.xyzx
mul r10.xyz, r0.wwww, r10.xyzx
dp3 r0.w, r10.xyzx, r10.xyzx
rsq r0.w, r0.w
mul r10.xyz, r0.wwww, r10.xyzx  // r10.x <- B.x; r10.y <- B.y; r10.z <- B.z

#line 162
mov r3.y, r3.y  // r3.y <- normalTexture

#line 163
ilt r0.w, l(-1), r3.y
if_nz r0.w

#line 165
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v4.xyxx, t3.xyzw, s1  // r3.x <- sampled.x; r3.y <- sampled.y; r3.z <- sampled.z

#line 166
  mov r3.xyz, r3.xyzx  // r3.x <- normalFactor.x; r3.y <- normalFactor.y; r3.z <- normalFactor.z

#line 167
  mul r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  mov r11.xyz, l(-1.000000,-1.000000,-1.000000,-0.000000)
  add r3.xyz, r3.xyzx, r11.xyzx  // r3.x <- normalFactor.x; r3.y <- normalFactor.y; r3.z <- normalFactor.z

#line 168
  mov r4.z, l(1.000000)
  mul r3.xyz, r3.xyzx, r4.xxzx
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mul r3.xyz, r0.wwww, r3.xyzx  // r3.x <- normalFactor.x; r3.y <- normalFactor.y; r3.z <- normalFactor.z

#line 169
  mul r4.xyz, r9.xyzx, r3.xxxx
  mul r9.xyz, r10.xyzx, r3.yyyy
  add r4.xyz, r4.xyzx, r9.xyzx
  mul r3.xyz, r8.xyzx, r3.zzzz
  add r3.xyz, r3.xyzx, r4.xyzx
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mul r8.xyz, r0.wwww, r3.xyzx

#line 170
endif 

#line 172
itof r3.xyz, l(0, 0, 0, 0)  // r3.x <- diffuse.x; r3.y <- diffuse.y; r3.z <- diffuse.z

#line 173
itof r4.xyz, l(0, 0, 0, 0)  // r4.x <- specular.x; r4.y <- specular.y; r4.z <- specular.z

#line 176
mov r9.xyz, -cb1[4].xyzx
dp3 r0.w, r9.xyzx, r9.xyzx
rsq r0.w, r0.w
mul r9.xyz, r0.wwww, r9.xyzx  // r9.x <- L.x; r9.y <- L.y; r9.z <- L.z

#line 177
mov r10.xyz, l(1.000000,1.000000,1.000000,0)  // r10.x <- Li.x; r10.y <- Li.y; r10.z <- Li.z

#line 178
dp3 r0.w, r8.xyzx, r9.xyzx
max r0.w, r0.w, l(0.000000)  // r0.w <- NoL

#line 179
dp3 r4.w, r8.xyzx, r7.xyzx
max r4.w, r4.w, l(0.000000)  // r4.w <- NoV

#line 180
lt r5.w, l(0.000000), r0.w
lt r6.w, l(0.000000), r4.w
or r5.w, r5.w, r6.w
if_nz r5.w

#line 183
  add r9.xyz, r7.xyzx, r9.xyzx
  dp3 r5.w, r9.xyzx, r9.xyzx
  rsq r5.w, r5.w
  mul r9.xyz, r5.wwww, r9.xyzx  // r9.x <- H.x; r9.y <- H.y; r9.z <- H.z

#line 185
  dp3 r5.w, r8.xyzx, r9.xyzx
  max r5.w, r5.w, l(0.000000)  // r5.w <- NoH

#line 186
  dp3 r6.w, r9.xyzx, r7.xyzx
  max r6.w, r6.w, l(0.000000)  // r6.w <- HoV

#line 188
  mul r9.xyz, r0.wwww, r10.xyzx
  nop 
  mov r11.xyz, r5.xyzx
  mov r12.xyz, r6.xyzx
  mov r2.xyz, r2.xyzx
  mov r6.w, r6.w

#line 34 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
  mov r7.w, l(3.141593)  // r7.w <- PI

#line 36
  nop 
  mov r11.xyz, r11.xyzx
  mov r12.xyz, r12.xyzx
  mov r6.w, r6.w

#line 8
  mov r13.xyz, -r11.xyzx
  add r12.xyz, r12.xyzx, r13.xyzx
  mov r8.w, -r6.w
  add r8.w, r8.w, l(1.000000)
  max r8.w, r8.w, l(0.000000)
  min r8.w, r8.w, l(1.000000)
  mov r9.w, l(1.000000)
  mul r9.w, r8.w, r9.w
  mul r8.w, r8.w, r8.w
  mul r8.w, r8.w, r8.w
  mul r8.w, r8.w, r9.w
  mul r12.xyz, r8.wwww, r12.xyzx
  add r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- <FSchlick return value>.x; r11.y <- <FSchlick return value>.y; r11.z <- <FSchlick return value>.z

#line 36
  mov r11.xyz, -r11.xyzx
  add r11.xyz, r11.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r12.xyz, r2.xyzx, r7.wwww
  mul r11.xyz, r11.xyzx, r12.xyzx  // r11.x <- <BrdfLambertian return value>.x; r11.y <- <BrdfLambertian return value>.y; r11.z <- <BrdfLambertian return value>.z

#line 188 "E:\Program\Nova2\Source\Game\Shaders\CityPS.hlsl"
  mul r9.xyz, r9.xyzx, r11.xyzx
  add r3.xyz, r3.xyzx, r9.xyzx

#line 189
  mul r9.xyz, r0.wwww, r10.xyzx
  nop 
  mov r10.xyz, r5.xyzx
  mov r6.xyz, r6.xyzx
  mov r1.w, r1.w
  mov r6.w, r6.w
  mov r0.w, r0.w
  mov r4.w, r4.w
  mov r5.w, r5.w

#line 41 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
  nop 
  mov r10.xyz, r10.xyzx
  mov r6.xyz, r6.xyzx
  mov r6.w, r6.w

#line 8
  mov r11.xyz, -r10.xyzx
  add r6.xyz, r6.xyzx, r11.xyzx
  mov r2.y, -r6.w
  add r2.y, r2.y, l(1.000000)
  max r2.y, r2.y, l(0.000000)
  min r2.y, r2.y, l(1.000000)
  mov r2.z, l(1.000000)
  mul r2.z, r2.y, r2.z
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, r2.z
  mul r6.xyz, r2.yyyy, r6.xyzx
  add r6.xyz, r6.xyzx, r10.xyzx  // r6.x <- <FSchlick return value>.x; r6.y <- <FSchlick return value>.y; r6.z <- <FSchlick return value>.z

#line 41
  mov r6.xyz, r6.xyzx  // r6.x <- F.x; r6.y <- F.y; r6.z <- F.z

#line 42
  nop 
  mov r0.w, r0.w
  mov r4.w, r4.w
  mov r1.w, r1.w

#line 13
  mul r2.y, r1.w, r1.w  // r2.y <- alphaRoughnessSq

#line 16
  mul r0.w, r0.w, r0.w
  mov r2.z, -r2.y
  add r2.z, r2.z, l(1.000000)
  mul r0.w, r0.w, r2.z
  add r0.w, r2.y, r0.w
  sqrt r0.w, r0.w
  mul r0.w, r0.w, r4.w  // r0.w <- ggxl

#line 18
  add r0.w, r0.w, r0.w  // r0.w <- ggx

#line 20
  lt r2.y, l(0.000000), r0.w
  div r0.w, l(0.500000), r0.w
  movc r0.w, r2.y, r0.w, l(0)  // r0.w <- <VGgx return value>

#line 42
  mov r0.w, r0.w  // r0.w <- Vis

#line 43
  nop 
  mov r5.w, r5.w
  mov r1.w, r1.w

#line 25
  mov r2.y, l(3.141593)  // r2.y <- PI

#line 26
  mul r1.w, r1.w, r1.w  // r1.w <- alphaRoughnessSq

#line 27
  mul r2.z, r5.w, r5.w
  mov r4.w, l(-1.000000)
  add r4.w, r1.w, r4.w
  mul r2.z, r2.z, r4.w
  add r2.z, r2.z, l(1.000000)  // r2.z <- f

#line 29
  mul r2.y, r2.z, r2.y
  mul r2.y, r2.z, r2.y
  div r1.w, r1.w, r2.y  // r1.w <- <DGgx return value>

#line 43
  mov r1.w, r1.w  // r1.w <- D

#line 45
  mul r6.xyz, r0.wwww, r6.xyzx
  mul r6.xyz, r1.wwww, r6.xyzx  // r6.x <- <BrdfSpecularGgx return value>.x; r6.y <- <BrdfSpecularGgx return value>.y; r6.z <- <BrdfSpecularGgx return value>.z

#line 189 "E:\Program\Nova2\Source\Game\Shaders\CityPS.hlsl"
  mul r6.xyz, r6.xyzx, r9.xyzx
  add r4.xyz, r4.xyzx, r6.xyzx

#line 190
endif 

#line 192
nop 
mov r8.xyz, r8.xyzx
mov r7.xyz, r7.xyzx
mov r0.y, r0.y
mov r2.x, r2.x
mov r5.xyz, r5.xyzx

#line 50 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r0.w, r8.xyzx, r7.xyzx
max r0.w, r0.w, l(0.000000)
min r0.x, r0.w, l(1.000000)  // r0.x <- NoV

#line 52
max r2.yz, r0.xxyx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r2.yz, r2.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)  // r2.y <- brdfSamplePoint.x; r2.z <- brdfSamplePoint.y

#line 53
nop 
mov r2.yz, r2.yyzy

#line 22 "E:\Program\Nova2\Source\Nova\Shaders\ImageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t35.zxyw, s1
mov r2.yz, r2.yyzy  // r2.y <- <SampleLutGgx return value>.x; r2.z <- <SampleLutGgx return value>.y

#line 53 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
mov r2.yz, r2.yyzy  // r2.y <- fAb.x; r2.z <- fAb.y

#line 55
nop 
mov r8.xyz, r8.xyzx

#line 44 "E:\Program\Nova2\Source\Nova\Shaders\ImageBasedLighting.hlsli"
sample_indexable(texturecube)(float,float,float,float) r6.xyz, r8.xyzx, t33.xyzw, s1
mov r6.xyz, r6.xyzx  // r6.x <- <SampleDiffuseIem return value>.x; r6.y <- <SampleDiffuseIem return value>.y; r6.z <- <SampleDiffuseIem return value>.z

#line 55 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
mov r6.xyz, r6.xyzx  // r6.x <- irradiance.x; r6.y <- irradiance.y; r6.z <- irradiance.z

#line 57
mov r0.w, -r0.y
add r0.w, r0.w, l(1.000000)
max r9.xyz, r5.xyzx, r0.wwww
mov r10.xyz, -r5.xyzx
add r9.xyz, r9.xyzx, r10.xyzx  // r9.x <- fr.x; r9.y <- fr.y; r9.z <- fr.z

#line 58
mov r0.w, -r0.x
add r0.w, r0.w, l(1.000000)
mov r1.w, l(1.000000)
mul r1.w, r0.w, r1.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mul r9.xyz, r0.wwww, r9.xyzx
add r9.xyz, r5.xyzx, r9.xyzx  // r9.x <- kS.x; r9.y <- kS.y; r9.z <- kS.z

#line 59
mul r9.xyz, r2.yyyy, r9.xyzx
add r9.xyz, r2.zzzz, r9.xyzx  // r9.x <- fssEss.x; r9.y <- fssEss.y; r9.z <- fssEss.z

#line 61
add r0.w, r2.z, r2.y
mov r0.w, -r0.w
add r0.w, r0.w, l(1.000000)  // r0.w <- ems

#line 62
mov r10.xyz, -r5.xyzx
add r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r10.xyz, r5.xyzx, r10.xyzx
div r10.xyz, r10.xyzx, l(21.000000, 21.000000, 21.000000, 0.000000)  // r10.x <- fAvg.x; r10.y <- fAvg.y; r10.z <- fAvg.z

#line 63
mul r9.yzw, r9.xxyz, r0.wwww
mul r9.yzw, r10.xxyz, r9.yyzw
mul r10.xyz, r0.wwww, r10.xyzx
mov r10.xyz, -r10.xyzx
add r10.xyz, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r9.yzw, r9.yyzw, r10.xxyz  // r9.y <- fmsEms.x; r9.z <- fmsEms.y; r9.w <- fmsEms.z

#line 64
mov r0.w, -r9.x
add r0.w, r0.w, l(1.000000)
add r0.w, r9.y, r0.w
mul r0.w, r0.w, r2.x  // r0.w <- kD

#line 66
add r2.xyz, r0.wwww, r9.yzwy
mul r2.xyz, r6.xyzx, r2.xyzx  // r2.x <- <IblRadianceLambertian return value>.x; r2.y <- <IblRadianceLambertian return value>.y; r2.z <- <IblRadianceLambertian return value>.z

#line 192 "E:\Program\Nova2\Source\Game\Shaders\CityPS.hlsl"
add r2.xyz, r2.xyzx, r3.xyzx  // r2.x <- diffuse.x; r2.y <- diffuse.y; r2.z <- diffuse.z

#line 193
nop 
mov r8.xyz, r8.xyzx
mov r7.xyz, r7.xyzx
mov r0.y, r0.y
mov r5.xyz, r5.xyzx

#line 71 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
dp3 r0.w, r8.xyzx, r7.xyzx
max r0.w, r0.w, l(0.000000)
min r0.x, r0.w, l(1.000000)  // r0.x <- NoV

#line 73
max r3.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)  // r3.x <- brdfSamplePoint.x; r3.y <- brdfSamplePoint.y

#line 74
nop 
mov r3.xy, r3.xyxx

#line 22 "E:\Program\Nova2\Source\Nova\Shaders\ImageBasedLighting.hlsli"
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t35.xyzw, s1
mov r3.xy, r3.xyxx  // r3.x <- <SampleLutGgx return value>.x; r3.y <- <SampleLutGgx return value>.y

#line 74 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
mov r3.xy, r3.xyxx  // r3.x <- fAb.x; r3.y <- fAb.y

#line 76
mov r6.xyz, -r7.xyzx
dp3 r0.w, r6.xyzx, r8.xyzx
add r0.w, r0.w, r0.w
mov r0.w, -r0.w
mul r7.xyz, r0.wwww, r8.xyzx
add r6.xyz, r6.xyzx, r7.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r6.xyzx  // r6.x <- R.x; r6.y <- R.y; r6.z <- R.z

#line 77
nop 
mov r6.xyz, r6.xyzx
mov r0.y, r0.y

#line 50 "E:\Program\Nova2\Source\Nova\Shaders\ImageBasedLighting.hlsli"
resinfo_indexable(texturecube)(float,float,float,float)_uint r0.w, l(0), t34.xyzw
mov r0.w, r0.w  // r0.w <- numberOfLevels

#line 52
mov r1.w, l(1)
ineg r1.w, r1.w
iadd r0.w, r0.w, r1.w
utof r0.w, r0.w
mul r0.w, r0.w, r0.y  // r0.w <- lod

#line 54
sample_l_indexable(texturecube)(float,float,float,float) r6.xyz, r6.xyzx, t34.xyzw, s1, r0.w
mov r6.xyz, r6.xyzx  // r6.x <- <SampleSpecularPmrem return value>.x; r6.y <- <SampleSpecularPmrem return value>.y; r6.z <- <SampleSpecularPmrem return value>.z

#line 77 "E:\Program\Nova2\Source\Nova\Shaders\BidirectionalReflectanceDistributionFunction.hlsli"
mov r6.xyz, r6.xyzx  // r6.x <- specularLight.x; r6.y <- specularLight.y; r6.z <- specularLight.z

#line 79
mov r0.y, -r0.y
add r0.y, r0.y, l(1.000000)
max r7.xyz, r5.xyzx, r0.yyyy
mov r8.xyz, -r5.xyzx
add r7.xyz, r7.xyzx, r8.xyzx  // r7.x <- fr.x; r7.y <- fr.y; r7.z <- fr.z

#line 80
mov r0.x, -r0.x
add r0.x, r0.x, l(1.000000)
mov r0.y, l(1.000000)
mul r0.y, r0.x, r0.y
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.y
mul r0.xyw, r0.xxxx, r7.xyxz
add r0.xyw, r0.xyxw, r5.xyxz  // r0.x <- kS.x; r0.y <- kS.y; r0.w <- kS.z

#line 81
mul r0.xyw, r3.xxxx, r0.xyxw
add r0.xyw, r3.yyyy, r0.xyxw  // r0.x <- fssEss.x; r0.y <- fssEss.y; r0.w <- fssEss.z

#line 83
mul r0.xyw, r0.xyxw, r6.xyxz  // r0.x <- <IblRadianceGgx return value>.x; r0.y <- <IblRadianceGgx return value>.y; r0.w <- <IblRadianceGgx return value>.z

#line 193 "E:\Program\Nova2\Source\Game\Shaders\CityPS.hlsl"
add r0.xyw, r0.xyxw, r4.xyxz  // r0.x <- specular.x; r0.y <- specular.y; r0.w <- specular.z

#line 195
mov r1.xyz, r1.xyzx  // r1.x <- emissive.x; r1.y <- emissive.y; r1.z <- emissive.z

#line 196
mul r3.xyz, r0.zzzz, r2.xyzx
mov r4.xyz, -r2.xyzx
add r3.xyz, r3.xyzx, r4.xyzx
mul r3.xyz, r3.xyzx, r3.wwww
add r2.xyz, r2.xyzx, r3.xyzx

#line 197
mul r3.xyz, r0.zzzz, r0.xywx
mov r4.xyz, -r0.xywx
add r3.xyz, r3.xyzx, r4.xyzx
mul r3.xyz, r3.xyzx, r3.wwww
add r0.xyz, r0.xywx, r3.xyzx  // r0.z <- specular.z

#line 199
add r0.xyz, r0.xyzx, r2.xyzx
add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- Lo.x; r0.y <- Lo.y; r0.z <- Lo.z

#line 200
mov o0.xyz, r0.xyzx
mov o0.w, r2.w
ret 
// Approximately 363 instruction slots used
