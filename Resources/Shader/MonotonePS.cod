//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerStates[2]                  sampler      NA          NA             s2      1 
// textureMaps[0]                    texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyzw        1     NONE   float       
// NORMAL                   0   xyzw        2     NONE   float       
// TANGENT                  0   xyzw        3     NONE   float       
// TEXCOORD                 0   xy          4     NONE   float   xy  
// COLOR                    0   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- pin.position.x; v0.y <- pin.position.y; v0.z <- pin.position.z; v0.w <- pin.position.w; 
//   v1.x <- pin.worldPosition.x; v1.y <- pin.worldPosition.y; v1.z <- pin.worldPosition.z; v1.w <- pin.worldPosition.w; 
//   v2.x <- pin.worldNormal.x; v2.y <- pin.worldNormal.y; v2.z <- pin.worldNormal.z; v2.w <- pin.worldNormal.w; 
//   v3.x <- pin.worldTangent.x; v3.y <- pin.worldTangent.y; v3.z <- pin.worldTangent.z; v3.w <- pin.worldTangent.w; 
//   v4.x <- pin.texcoord.x; v4.y <- pin.texcoord.y; 
//   v5.x <- pin.color.x; v5.y <- pin.color.y; v5.z <- pin.color.z; v5.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 13 "E:\Program\XAudio\Nova_Fullscreen\Source\Game\Shaders\MonotonePS.hlsl"
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s2  // r0.x <- color.x; r0.y <- color.y; r0.z <- color.z; r0.w <- color.w

#line 14
add r0.x, r0.y, r0.x
add r0.x, r0.z, r0.x
mul r0.xyz, r0.xxxx, l(0.333300, 0.333300, 0.333300, 0.000000)  // r0.x <- color.x

#line 16
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 7 instruction slots used
